# set prompt \033[1m(gdb) \033[0m
set extended-prompt \w - \f\n(gdb) 

python
import os
gdb.execute('set history filename ' + os.environ['XDG_STATE_HOME'] + '/gdb_history')
end
set history save on
set history size 1024

set print pretty
set print symbol-filename on
set print array on
set print array-indexes on

# Show the concrete types behind nsIFoo
set print object on

# https://wiki.archlinux.org/title/Debuginfod
set debuginfod enabled on
set debuginfod urls https://debuginfod.debian.net/ https://debuginfod.elfutils.org/


# https://droettboom.com/blog/2015/11/20/gdb-python-extensions/
python
import gdb
import re
import sys
import os
from pathlib import Path
PATTERN = re.compile(r"^python3\.[0-9]+$")
for p in Path("/usr/share/doc/").glob("python3.*"):
    match = PATTERN.match(p.name)
    if match is not None:
        sys.path.insert(0, str(p / "examples/gdb"))
        def setup_python(event):
            import libpython
        gdb.events.new_objfile.connect(setup_python)
        break
else:
    print("No GDB Python integration found")
end
