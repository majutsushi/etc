# sligthly lower priority than everything else since specialized versions
# should overwrite. The user needs to adjust her priority in her snippets to
# ~-55 so that other filetypes will still overwrite.
priority -55

##############
# NICE BOXES #
##############
global !p
import string, vim

def _parse_comments(s):
	""" Parses vim's comments option to extract comment format """
	i = iter(s.split(","))

	rv = []
	try:
		while True:
			# get the flags and text of a comment part
			flags, text = next(i).split(':', 1)

			if len(flags) == 0:
				rv.append((text, text, text, ""))
			# parse 3-part comment, but ignore those with O flag
			elif flags[0] == 's' and 'O' not in flags:
				ctriple = []
				indent = ""

				if flags[-1] in string.digits:
					indent = " " * int(flags[-1])
				ctriple.append(text)

				flags,text = next(i).split(':', 1)
				assert(flags[0] == 'm')
				ctriple.append(text)

				flags,text = next(i).split(':', 1)
				assert(flags[0] == 'e')
				ctriple.append(text)
				ctriple.append(indent)

				rv.append(ctriple)
			elif flags[0] == 'b':
				if len(text) == 1:
					rv.insert(0, (text,text,text, ""))
	except StopIteration:
		return rv

def _get_comment_format():
	""" Returns a 4-element tuple representing the comment format for
	the current file. """
	return _parse_comments(vim.eval("&comments"))[0]


def make_box(twidth, bwidth=None):
	b, m, e, i = _get_comment_format()
	bwidth_inner = bwidth - 3 - max(len(b), len(i + e)) if bwidth else twidth + 2
	sline = b + m + bwidth_inner * m[0] + 2 * m[0]
	nspaces = (bwidth_inner - twidth) // 2
	mlines = i + m + " " + " " * nspaces
	mlinee = " " + " "*(bwidth_inner - twidth - nspaces) + m
	eline = i + m + bwidth_inner * m[0] + 2 * m[0] + e
	return sline, mlines, mlinee, eline

def foldmarker():
	"Return a tuple of (open fold marker, close fold marker)"
	return vim.eval("&foldmarker").split(",")

endglobal

snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]))
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet

snippet bbox "A nice box over the full width" b
`!p
width = int(vim.eval("&textwidth")) or 71
box = make_box(len(t[1]), width)
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]), width)
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet


snippet fold "Insert a vim fold marker" b
`!p snip.rv = _get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]`${2:1} `!p snip.rv = _get_comment_format()[2]`
endsnippet

snippet foldc "Insert a vim fold close marker" b
`!p snip.rv = _get_comment_format()[0]` ${2:1}`!p snip.rv = foldmarker()[1]` `!p snip.rv = _get_comment_format()[2]`
endsnippet

snippet foldp "Insert a vim fold marker pair" b
`!p snip.rv = _get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]` `!p snip.rv = _get_comment_format()[2]`
${2:${VISUAL:Content}}
`!p snip.rv = _get_comment_format()[0]` `!p snip.rv = foldmarker()[1]` $1 `!p snip.rv = _get_comment_format()[2]`
endsnippet


snippet lorem "Lorem Ipsum - 50 Words"
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
endsnippet


snippet c)
Copyright `!v &enc[:2] == "utf" ? "Â©" : "(c)"` `!v strftime("%Y")` ${1:`!v g:snips_author`}. All Rights Reserved.
endsnippet

snippet date
`!v strftime("%Y-%m-%d")`
endsnippet

snippet ddate
`!v strftime("%B %d, %Y")`
endsnippet

snippet time
`!v strftime("%H:%M")`
endsnippet

snippet datetime
`!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet GPL2
`!p s, m, e, i = _get_comment_format()`
`!p snip.rv = s`
`!p snip.rv = i + m + " "`${1:One line to give the program's name and a brief description.}
`!p snip.rv = i + m + " "`Copyright (C) `!v strftime("%Y")` ${2:`!v g:snips_author`}
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`This program is free software; you can redistribute it and/or modify
`!p snip.rv = i + m + " "`it under the terms of the GNU General Public License as published by
`!p snip.rv = i + m + " "`the Free Software Foundation; either version 2 of the License, or
`!p snip.rv = i + m + " "`(at your option) any later version.
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`This program is distributed in the hope that it will be useful,
`!p snip.rv = i + m + " "`but WITHOUT ANY WARRANTY; without even the implied warranty of
`!p snip.rv = i + m + " "`MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
`!p snip.rv = i + m + " "`GNU General Public License for more details.
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`You should have received a copy of the GNU General Public License
`!p snip.rv = i + m + " "`along with this program; if not, see <http://www.gnu.org/licenses/>.
`!p snip.rv = i + e`

${0}
endsnippet

snippet GPL3
`!p s, m, e, i = _get_comment_format()`
`!p snip.rv = s`
`!p snip.rv = i + m + " "`${1:one line to give the program's name and a brief description.}
`!p snip.rv = i + m + " "`Copyright (C) `!v strftime("%Y")` ${2:`!v g:snips_author`}
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`This program is free software: you can redistribute it and/or modify
`!p snip.rv = i + m + " "`it under the terms of the GNU General Public License as published by
`!p snip.rv = i + m + " "`the Free Software Foundation, either version 3 of the License, or
`!p snip.rv = i + m + " "`(at your option) any later version.
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`This program is distributed in the hope that it will be useful,
`!p snip.rv = i + m + " "`but WITHOUT ANY WARRANTY; without even the implied warranty of
`!p snip.rv = i + m + " "`MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
`!p snip.rv = i + m + " "`GNU General Public License for more details.
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`You should have received a copy of the GNU General Public License
`!p snip.rv = i + m + " "`along with this program.  If not, see <http://www.gnu.org/licenses/>.
`!p snip.rv = i + e`

${0}
endsnippet

snippet MIT
`!p s, m, e, i = _get_comment_format()`
`!p snip.rv = s`
`!p snip.rv = i + m + " "`${1:one line to give the program's name and a brief description}
`!p snip.rv = i + m + " "`Copyright (C) `!v strftime("%Y")` ${2:`!v g:snips_author`}
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`Permission is hereby granted, free of charge, to any person obtaining
`!p snip.rv = i + m + " "`a copy of this software and associated documentation files (the "Software"),
`!p snip.rv = i + m + " "`to deal in the Software without restriction, including without limitation
`!p snip.rv = i + m + " "`the rights to use, copy, modify, merge, publish, distribute, sublicense,
`!p snip.rv = i + m + " "`and/or sell copies of the Software, and to permit persons to whom the
`!p snip.rv = i + m + " "`Software is furnished to do so, subject to the following conditions:
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`The above copyright notice and this permission notice shall be included
`!p snip.rv = i + m + " "`in all copies or substantial portions of the Software.
`!p snip.rv = i + m`
`!p snip.rv = i + m + " "`THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
`!p snip.rv = i + m + " "`EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
`!p snip.rv = i + m + " "`OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
`!p snip.rv = i + m + " "`IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
`!p snip.rv = i + m + " "`DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
`!p snip.rv = i + m + " "`TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
`!p snip.rv = i + m + " "`OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
`!p snip.rv = i + e`

${0}
endsnippet

# vim:ft=snippets:
