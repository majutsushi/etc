# Only run in interactive shells
[[ $- == *i* ]] || return 0

prompt_colour_default='\[\e[0m\]'
prompt_colour_black='\[\e[30m\]'
prompt_colour_red='\[\e[31m\]'
prompt_colour_green='\[\e[32m\]'
prompt_colour_yellow='\[\e[33m\]'
prompt_colour_blue='\[\e[34m\]'
prompt_colour_magenta='\[\e[35m\]'
prompt_colour_cyan='\[\e[36m\]'
prompt_colour_white='\[\e[37m\]'

tmuxrc() {
    local TMUXDIR=/tmp/sshrctmux-$(whoami)
    if ! [[ -d "$TMUXDIR" ]]; then
        rm -rf "$TMUXDIR"
        mkdir -p "$TMUXDIR"
    fi
    rm -rf "$TMUXDIR/.sshrc.d"
    cp -r "$SSHHOME"/.sshrc "$SSHHOME"/bashsshrc "$SSHHOME"/sshrc "$SSHHOME"/.sshrc.d "$TMUXDIR"
    local SSHHOME=$TMUXDIR
    local SSHRCD=$SSHHOME/.sshrc.d
    local SHELL=$SSHHOME/bashsshrc
    command tmux -S "$TMUXDIR"/tmuxserver -f "$SSHRCD/tmux.conf" new-session -A -s 0
}
SHELL=$(which bash)

term_exists() { infocmp "$1" &>/dev/null; }
if ! term_exists "$TERM"; then
    if term_exists "${TERM%-256color}"; then
        TERM="${TERM%-256color}"
    elif [[ "$TERM" =~ tmux.* ]] && term_exists tmux-256color; then
        TERM=tmux-256color
    elif [[ "$TERM" =~ tmux.* ]] && term_exists tmux; then
        TERM=tmux
    elif [[ "$TERM" =~ tmux.* ]] && term_exists screen-256color; then
        TERM=screen-256color
    elif [[ "$TERM" =~ tmux.* ]] && term_exists screen; then
        TERM=screen
    elif term_exists xterm-256color; then
        TERM=xterm-256color
    else
        TERM=xterm
    fi
    export TERM
fi

prompt_logo() {
    # https://github.com/Lukas-W/font-logos
    local -A logos=(
        [alpaquita]=" "
        [alpine]="${prompt_colour_blue} "
        [amzn]="\\[\\e[38;5;208m\\] "
        [arch]="${prompt_colour_blue} "
        [artix]="${prompt_colour_blue} "
        [centos]="${prompt_colour_magenta} "
        [debian]="${prompt_colour_red} "
        [dragonfly]=" "
        [elementary]=" "
        [fedora]="${prompt_colour_blue} "
        [freebsd]="${prompt_colour_red} "
        [gentoo]=" "
        [illumos]="${prompt_colour_red} "
        [kali]=" "
        [mageia]=" "
        [manjaro]="${prompt_colour_green} "
        [linux]=" "
        [linuxmint]="${prompt_colour_green} "
        [macos]=" "
        [mariner]="${prompt_colour_blue} "
        [netbsd]="${prompt_colour_red} "
        [nixos]="${prompt_colour_blue} "
        [ol]="${prompt_colour_red}󰌷 "
        [openbsd]="${prompt_colour_yellow} "
        [opensuse]="${prompt_colour_green} "
        [pop]="${prompt_colour_cyan} "
        [raspbian]="${prompt_colour_red} "
        [redox]="󰀘 "
        [rhel]="${prompt_colour_red} "
        [rocky]="${prompt_colour_green} "
        [sabayon]=" "
        [slackware]=" "
        [ubuntu]="\\[\\e[38;5;202m\\] "
        [unknown]="${prompt_colour_red} "
        [windows]="${prompt_colour_blue}󰍲 "
    )
    local os
    if [[ -r "/etc/os-release" ]]; then
        local distro=$(. /etc/os-release && echo "$ID")
        case "$distro" in
            arch*) os=arch ;;
            opensuse*|sles*) os=opensuse ;;
            *) os=$distro ;;
        esac
    elif command -v uname >/dev/null; then
        kernel=$(uname -s | tr '[:upper:]' '[:lower:]')
        case $kernel in
            darwin) os=macos ;;
            sunos) os=illumos ;;
            *) os=$kernel ;;
        esac
    fi

    logo=${logos[$os]:-${logos[unknown]}}
    printf "%s%s " "$logo" "${prompt_colour_default}"
}
PROMPT_LOGO="$(prompt_logo)"

unset -f term_exists prompt_logo


color-log() {
    sed -r \
        -e "s/(.*error.*)/$(tput setaf 1)\\1$(tput sgr0)/I" \
        -e "s/(.*warning.*)/$(tput setaf 3)\\1$(tput sgr0)/I" \
        -e "s/(.*debug.*)/$(tput setaf 7)\\1$(tput sgr0)/I"
}

mcd() {
    mkdir "$1" && cd "$1"
}


__prompt_command() {
    local exit_code="$?"

    local end=$(date '+%s');
    local last_cmd="$(HISTTIMEFORMAT='%s ' history 1)";
    local start=$(awk '{print $2}' <<<"$last_cmd");
    local cmd=$(cut -d' ' -f6- <<<"$last_cmd");

    if (( end - start >= 20 )) && [[ $TERM == xterm-kitty ]]; then
        local title
        if (( exit_code == 0 )); then
            title="✅ Command finished on $HOSTNAME"
        else
            title="❌ Command failed on $HOSTNAME"
        fi
        printf '\x1b]99;i=1:d=0;%s\x1b'\\ "$title"
        printf '\x1b]99;i=1:d=1:p=body;%s\x1b'\\ "$cmd"
    fi

    PS1=""
    if [[ -f /var/run/reboot-required ]]; then
        PS1+="${prompt_colour_red}↻ ${prompt_colour_default}"
    fi
    PS1+="$PROMPT_LOGO"
    PS1+="${prompt_colour_red}\u${prompt_colour_default}@${prompt_colour_yellow}\h${prompt_colour_default}"
    PS1+=":"
    PS1+="${prompt_colour_green}\w${prompt_colour_default}"
    PS1+="\n"

    if (( exit_code != 0 )); then
        PS1+="${prompt_colour_red}$exit_code ${prompt_colour_default}"
    fi
    PS1+="\\$ "

    history -a
}

__rprompt() {
    printf "%*s\\r" "$(tput cols)" "$(eval echo "$RPROMPT")"
}

export PROMPT_COMMAND="__prompt_command; __rprompt; ${PROMPT_COMMAND:-:}"


set -o noclobber

shopt -s checkwinsize

# disable XON/XOFF flow control (^s/^q)
stty stop ''
stty -ixoff
stty -ixon

HISTCONTROL=ignorespace:ignoredups:erasedups
HISTTIMEFORMAT='%F %T '
shopt -s histappend

if [[ -r "/usr/share/bash-completion/bash_completion" ]]; then
    . /usr/share/bash-completion/bash_completion
fi

export PAGER=less
if command -v vim >/dev/null; then
    export EDITOR=vim
    export VISUAL=vim
    alias vi=vim
else
    export EDITOR=vi
    export VISUAL=vi
fi

alias ls='LC_COLLATE=POSIX ls  -Fh --color=auto --group-directories-first --hyperlink=auto'
alias ll='LC_COLLATE=POSIX ls -lFh --color=auto --group-directories-first --hyperlink=auto'
alias l='LC_COLLATE=POSIX ls -lAFh --color=auto --group-directories-first --hyperlink=auto'
command -v tree &>/dev/null && alias t="tree -F -C"

export SSHRCD="$SSHHOME/.sshrc.d"
export MYVIMRC="$SSHRCD/vimrc"
export VIMINIT="source $MYVIMRC"
export GIT_CONFIG_GLOBAL="$SSHRCD/git/config"

export INPUTRC="$SSHRCD/inputrc"

export LESS='-iRX-P%f ?m(file %i/%m) .lines %lt-%lb?L/%L. ?e(END)?x - Next\: %x.:?PB%PB\%..%t'
export SYSTEMD_LESS="-F$LESS"
export LESSHISTFILE=$SSHHOME/.lesshst
export LESSKEY=$SSHHOME/.less
lesskey "$SSHRCD/lesskey" 2>/dev/null

export LESS_TERMCAP_md=$(tput setaf 1; tput bold)
export LESS_TERMCAP_us=$(tput setaf 2; tput bold)
export LESS_TERMCAP_ue=$(tput sgr0)
export GROFF_NO_SGR=1

export CLIFF_FIT_WIDTH=1

if command -v dircolors >/dev/null; then
    eval "$(dircolors -b "$SSHRCD"/dircolors)" 2>/dev/null
fi

# Set window title to the short hostname
echo -e "\\e]0;${HOSTNAME%%.*}\\e\\"

alias x='$SSHRCD/unpack'

if [[ -f "$SSHRCD/kitty.bash" ]]; then
    export KITTY_SHELL_INTEGRATION="enabled"
    # shellcheck disable=SC1091
    source "$SSHRCD/kitty.bash"
fi

# vim: ft=sh
