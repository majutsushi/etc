# Used in the prompt
ORIGHOME=$HOME

# For 'time' zsh builtin
TIMEFMT="%*E real  %*U user  %*S system  %P  %J"

NULLCMD=cat
READNULLCMD=${PAGER}

# make sure the cache dir exists
[[ ! -d $XDG_CACHE_HOME ]] && mkdir $XDG_CACHE_HOME
ZSH_CACHEDIR=$XDG_CACHE_HOME/zsh
[[ ! -d $ZSH_CACHEDIR ]] && mkdir $ZSH_CACHEDIR
ZCOMPDUMP=$ZSH_CACHEDIR/zcompdump_${ZSH_VERSION}

ZSH_STATE_DIR=$XDG_STATE_HOME/zsh
[[ ! -d $ZSH_STATE_DIR ]] && mkdir $ZSH_STATE_DIR


export PAGER="${PAGER:-less}"

export LESS='-iRX-P%f ?m(file %i/%m) .lines %lt-%lb?L/%L. ?e(END)?x - Next\: %x.:?PB%PB\%..%t'
export SYSTEMD_LESS="-F$LESS"
export LESSHISTFILE="$XDG_STATE_HOME/lesshst"
export LESSKEYIN="$DOTFILES/less/lesskey"
export LESSOPEN="| $DOTFILES/less/lessfilter %s"

# make groff not output ANSI escape sequences directly, but old codes with
# backspace that can then be changed with the less codes above
export GROFF_NO_SGR=1

export MANWIDTH="${MANWIDTH:-80}"

export ZIPOPT="--exclude=@$DOTFILES/excludes/archive"
export TAR_OPTIONS="--exclude-from=$DOTFILES/excludes/archive --exclude-caches-all --exclude-caches-under"

# export RUBYOPT="-w $RUBYOPT"
export RI="-f ansi"

# export TERMINFO="$XDG_DATA_HOME/terminfo"

export SSHHOME="$DOTFILES/sshrc"

export AUTOSSH_PORT=0

export TMUX_TMPDIR="$XDG_RUNTIME_DIR"

if [[ "$TERM" == xterm-kitty ]]; then
    export EZA_ICONS_AUTO=automatic
    export EZA_ICON_SPACING=2
fi

export BIBTOOLRSC="$DOTFILES/bibtoolrsc"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export INPUTRC="$XDG_CONFIG_HOME"/inputrc
export IPYTHONDIR="$XDG_DATA_HOME"/ipython
export IRBRC="$DOTFILES/irbrc"
export LG_CONFIG_FILE="$DOTFILES/lazygit/config.yml"
export PYLINTHOME="$XDG_CACHE_HOME"/pylint
export PYTHON_HISTORY="$XDG_STATE_HOME/python_history"
export RIPGREP_CONFIG_PATH="$DOTFILES/ripgreprc"
export SQLITE_HISTORY="$XDG_STATE_HOME/sqlite_history"
export TIGRC_USER="$DOTFILES"/tigrc

export PSQLRC="$XDG_CONFIG_HOME/psqlrc"
export PGPASSFILE="$XDG_DATA_HOME/postgresql/pgpass"
export PGSERVICEFILE="$XDG_DATA_HOME/postgresql/pg_service.conf"
export PSQL_HISTORY="$XDG_STATE_HOME/psql_history"

export CLIFF_FIT_WIDTH=1

export NETHACKOPTIONS="@$DOTFILES/nethackrc"

export GPG_TTY=$(tty)

export MOCP_OPTS="--moc-dir $DOTFILES/moc"

export SACK_SHORTCUT_FILE="$XDG_CACHE_HOME/sack_shortcuts/$$"
mkdir -p "$(dirname "$SACK_SHORTCUT_FILE")"

export SSHRC_FILES="$(which unpack)"
SSHRC_FILES+="|$(which xfile)"
SSHRC_FILES+="|$(which cb)"
if [[ "$TERM" == xterm-kitty ]]; then
    SSHRC_FILES+="|$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"
fi

# See https://git-scm.com/docs/git-config#ENVIRONMENT
export GIT_CONFIG_COUNT=0

# https://jqlang.github.io/jq/manual/#colors
export JQ_COLORS="0;35:0;31:0;32:0;36:0;33:1;39:1;39:1;32"

# vim: filetype=zsh
