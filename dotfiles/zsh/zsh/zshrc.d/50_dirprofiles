# directory based profiles (from grml)

chpwd_profiles() {
    # Say you want certain settings to be active in certain directories.
    # This is what you want.
    #
    # zstyle ':chpwd:profiles:/usr/src/grml(|/|/*)'   profile grml
    # zstyle ':chpwd:profiles:/usr/src/debian(|/|/*)' profile debian
    #
    # When that's done and you enter a directory that matches the pattern
    # in the third part of the context, a function called chpwd_profile_grml,
    # for example, is called (if it exists).
    #
    # If no pattern matches (read: no profile is detected) the profile is
    # set to 'default', which means chpwd_profile_default is attempted to
    # be called.
    #
    # A word about the context (the ':chpwd:profiles:*' stuff in the zstyle
    # command) which is used: The third part in the context is matched against
    # ${PWD}. That's why using a pattern such as /foo/bar(|/|/*) makes sense.
    # Because that way the profile is detected for all these values of ${PWD}:
    #   /foo/bar
    #   /foo/bar/
    #   /foo/bar/baz
    # So, if you want to make double damn sure a profile works in /foo/bar
    # and everywhere deeper in that tree, just use (|/|/*) and be happy.

    local profile context
    local -i reexecute

    context=":chpwd:profiles:$PWD"
    zstyle -s "$context" profile profile || profile='default'
    zstyle -T "$context" re-execute && reexecute=1 || reexecute=0

    if (( ${+parameters[CHPWD_PROFILE]} == 0 )); then
        typeset -g CHPWD_PROFILE
        local CHPWD_PROFILES_INIT=1
        (( ${+functions[chpwd_profiles_init]} )) && chpwd_profiles_init
    elif [[ $profile != $CHPWD_PROFILE ]]; then
        (( ${+functions[chpwd_leave_profile_$CHPWD_PROFILE]} )) \
            && chpwd_leave_profile_${CHPWD_PROFILE}
    fi
    if (( reexecute )) || [[ $profile != $CHPWD_PROFILE ]]; then
        (( ${+functions[chpwd_profile_$profile]} )) && chpwd_profile_${profile}
    fi

    CHPWD_PROFILE="${profile}"
    return 0
}
add-zsh-hook chpwd chpwd_profiles

_switch_check() {
    [[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
    return 0
}

_switch_notify() {
    if [[ $ZSHRC_INIT != 1 && -t 1 ]]; then
        print "chpwd(): Switching to profile: $profile"
    fi
    return 0
}


# Profiles

chpwd_profile_default() {
    _switch_check || return
    _switch_notify
}

TESTHOME_BASE=${ORIGHOME}/src/testhomes
zstyle ":chpwd:profiles:${TESTHOME_BASE}/*" profile testhomes
chpwd_profile_testhomes() {
    local testdir=${${PWD#${TESTHOME_BASE}/}%%/*}
    if [[ $HOME != $ORIGHOME && $(basename $HOME) == $testdir ]]; then
        return
    fi
    _switch_notify
    if [[ $ZSHRC_INIT != 1 && -t 1 ]]; then
        print "Using testhome: $testdir"
    fi
    export HOME=${TESTHOME_BASE}/${testdir}
}
chpwd_leave_profile_testhomes() {
    export HOME=$ORIGHOME
}


# Initialisation

chpwd_profiles_init() {
    CHPWD_PROFILE='default'
}

chpwd_profiles

# vim: filetype=zsh
