# report about cpu-/system-/user-time of command
# if running longer than 5 seconds
# REPORTTIME=5

zmodload zsh/datetime

typeset -g __last_cmd
typeset -g __last_cmd_dir
typeset -g __last_cmd_time

_record_cmd() {
    __last_cmd="$1"
    __last_cmd_dir="${(D)PWD}"
    __last_cmd_time=$(print -P "%D{%s}")
}
add-zsh-hook preexec _record_cmd

alert() {
    local urgency
    local summary
    if (( __last_cmd_exitstatus == 0 )); then
        urgency=normal
        summary="✅ Background job finished"
    else
        urgency=critical
        summary="❌ Background job failed"
    fi

    if islinux; then
        local body="\$ $__last_cmd\n<span font-style='italic'>${__last_cmd_dir}</span>"
        notify-send \
            --icon /usr/share/icons/gnome/48x48/apps/terminal.png \
            --expire-time=10000 \
            --urgency=$urgency "$summary" "$body"

        # set urgent hint on window
        wmctrl -i -r $WINDOWID -b add,demands_attention
    elif ismac; then
        osascript -e "display notification \"\$ ${__last_cmd//\\/\\\\}\" with title \"$summary\" subtitle \"$__last_cmd_dir\""
        tmux-echo '\e]1337;RequestAttention=yes\a'
    fi
}

_alert_bg_job_finished() {
    [[ -z "$__last_cmd" ]] && return
    [[ -n "$SSH_CONNECTION" ]] && return
    [[ "$TERM_PROGRAM" == vscode ]] && return
    is-active-shell && return

    alert
}
add-zsh-hook precmd _alert_bg_job_finished

_clear_last_cmd() {
    __last_cmd=""
    __last_cmd_dir=""
}
add-zsh-hook precmd _clear_last_cmd


# vim: filetype=zsh
