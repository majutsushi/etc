"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true

[battery]
disabled = true

[character]
format = "$symbol "
success_symbol = '[\$](default)'
error_symbol = '[\$](red)'

[directory]
style = "green"
repo_root_style = "yellow"
truncation_length = 20
truncate_to_repo = false
truncation_symbol = "…/"
fish_style_pwd_dir_length = 2

[env_var.INCOGNITO]
variable = "INCOGNITO"
format = "🕵️ "
description = "Incognito mode"

[env_var.MISE]
variable = "MISE_ENV"
format = "🍽️  [$env_value]($style) "

[git_branch]
format = "@ [$branch(:$remote_branch)]($style) "
style = "bold yellow"

[git_status]
style = "default"
conflicted = "[=](red)"
ahead = "[⇡](cyan)${count}"
behind = "[⇣](cyan)${count}"
diverged = "[⇡](cyan)${ahead_count}[⇣](cyan)${behind_count}"
up_to_date = "[✓](green)"
untracked = "[?](cyan)"
stashed = '[\$](yellow)'
modified = "[*](red)"
staged = "[+](green)"
renamed = "[»](cyan)"
deleted = "[-](red)"

[hostname]
ssh_only = true
format = "[$ssh_symbol$hostname]($style) • "
style = "cyan"

[java]
style = "bright-purple"
detect_files = ["pom.xml", "build.gradle.kts", "build.sbt", ".java-version", ".deps.edn", "project.clj", "build.boot", "build.xml"]

[rlang]
# Disable for now because of .Rprofile in home dir
disabled = true

[shlvl]
disabled = false

[status]
disabled = false
format = '[$symbol$status( \($common_meaning$signal_name\))]($style) '
pipestatus = true
pipestatus_format = '\[$pipestatus\] => [$status( \($common_meaning$signal_name\))]($style) '
pipestatus_segment_format = '[$symbol$status(\($common_meaning$signal_name\))]($style)'
symbol = ""

[username]
show_always = false
format = "[$user]($style) • "

[custom.parentdiff]
require_repo = true
when = true
shell = ["bash", "--noprofile", "--norc"]
command = '''
    branch="$(git symbolic-ref --short -q HEAD)"
    parent_branch="$(git config branch.${branch}.parent)"
    [[ -z "$parent_branch" ]] && exit

    green() { echo -e "\033[32m$1\033[0m"; }
    red() { echo -e "\033[31m$1\033[0m"; }
    count="$(git rev-list --count --left-right $parent_branch...HEAD 2>/dev/null)"

    out="$parent_branch:"
    case "$count" in
        "0	0") # equal to parent_branch
            exit ;;
        "0	"*) # ahead of parent_branch
            out+="$(green ↑)${count#0	}" ;;
        *"	0") # behind parent_branch
            out+="$(red ↓)${count%	0}" ;;
        *)	    # diverged from parent_branch
            out+="$(green ↑)${count#*	}/$(red ↓)${count%	*}" ;;
    esac

    echo "$out"
'''
format = "($output )"
