#!/bin/sh
# The shebang is just to get shellcheck to use POSIX rules
# shellcheck disable=SC3043
#
# https://github.com/grawity/dotfiles/blob/master/.environ.notes

if ! type ismac >/dev/null 2>&1; then
    ismac() {
        [ "$(uname -s)" = Darwin ]
        # Redefine the function to not call an external command every time
        eval "ismac() { return $?; }"
    }
fi

_add_to_path() {
    # This is non-POSIX but works in dash
    local pos="$1"
    local pathvar="$2"
    local dir="$3"

    case "$(eval "echo \"\$$pathvar\"")" in
        $dir:*|*:$dir:*|*:$dir)
            # Don't add again
            ;;
        *)
            case $pos in
                pre)
                    eval "$pathvar='$dir':\$$pathvar" ;;
                post)
                    eval "$pathvar=\$$pathvar:'$dir'" ;;
            esac
            ;;
    esac
}


# This wrapper makes the filename of the sourced file available as $1 in the file
_source() {
    # shellcheck source=/dev/null
    . "$1"
}

if [ -f ~/.local/etc/profile ]; then
    _source ~/.local/etc/profile
fi
if [ -d ~/.local/etc/profile.d ]; then
    for file in "$HOME"/.local/etc/profile.d/??_*; do
        # Protect against empty directories
        [ -e "$file" ] || continue
        _source "$file"
    done
fi


export XDG_DATA_HOME="$HOME/.local/share"
# export XDG_DATA_DIRS=/usr/local/share/:/usr/share/
export XDG_CONFIG_HOME="$HOME/.config"
# export XDG_CONFIG_DIRS=/etc/xdg
export XDG_STATE_HOME="$HOME/.local/state"
if ismac; then
    export XDG_CACHE_HOME="$HOME/Library/Caches"
else
    export XDG_CACHE_HOME="$HOME/.cache"
fi
if ismac; then
    export XDG_RUNTIME_DIR="$TMPDIR"
fi

export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
if [ -d "$PYENV_ROOT/bin" ]; then
    _add_to_path pre PATH "$PYENV_ROOT/bin"
fi
if command -v pyenv > /dev/null; then
    eval "$(pyenv init --path)"
fi

if [ -n "$HOMEBREW_PREFIX" ]; then
    _add_to_path pre PATH "$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin"
    _add_to_path pre PATH "$HOMEBREW_PREFIX/opt/gnu-getopt/libexec/gnubin"
    _add_to_path pre PATH "$HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin"
    _add_to_path pre PATH "$HOMEBREW_PREFIX/opt/gnu-tar/libexec/gnubin"
fi
_add_to_path pre PATH "$HOME/.local/bin"
_add_to_path pre PATH "$HOME/usr/bin"
_add_to_path pre PATH "$HOME/.etc/bin"
_add_to_path pre PATH "$HOME/.bin"

_add_to_path post PATH /usr/local/sbin
_add_to_path post PATH /sbin
_add_to_path post PATH /usr/sbin

if [ -z "$MANPATH" ]; then
    MANPATH="$(manpath)"
fi
export MANPATH

export LD_LIBRARY_PATH="$HOME/.local/lib/ld"


# Make sure Monday is the first day of the week, as it should be.
if locale -a | command grep -q en_GB.UTF-8; then
    export LC_TIME=en_GB.UTF-8
fi

export EDITOR=vim
export VISUAL="$EDITOR"
export BROWSER=xdg-open

export PAGER="${PAGER:-less}"

export LESS='-iRX-P%f ?m(file %i/%m) .lines %lt-%lb?L/%L. ?e(END)?x - Next\: %x.:?PB%PB\%..%t'
export SYSTEMD_LESS="-F$LESS"
export LESSHISTFILE="$HOME/.var/lib/lesshst"
export LESSKEY="$HOME/.var/lib/less"
export LESSOPEN="| $HOME/.etc/less/lessfilter %s"

# See 'man 5 termcap' for capabilities
# start bold mode => bold red
LESS_TERMCAP_md="$(tput setaf 9; tput bold)"
# start underlining => bold green
LESS_TERMCAP_us="$(tput setaf 10; tput bold)"
# end underlining => turn off all attributes
LESS_TERMCAP_ue="$(tput sgr0)"
# start standout mode => black on white
LESS_TERMCAP_so="$(tput setaf 0; tput setab 7)"
# end standout mode => turn off all attrs
LESS_TERMCAP_se="$(tput sgr0)"
export LESS_TERMCAP_md LESS_TERMCAP_us LESS_TERMCAP_ue LESS_TERMCAP_so LESS_TERMCAP_se

# make groff not output ANSI escape sequences directly, but old codes with
# backspace that can then be changed with the less codes above
export GROFF_NO_SGR=1

export MANWIDTH="${MANWIDTH:-80}"

export CLICOLOR=1
eval "$(dircolors -b "$HOME/.etc/shell-common/dircolors")" 2>/dev/null || :

export ZIPOPT="--exclude=@$HOME/.etc/excludes/archive"
export TAR_OPTIONS="--exclude-from=$HOME/.etc/excludes/archive --exclude-caches-all --exclude-caches-under"

export DEBEMAIL="jan@majutsushi.net"
export DEBFULLNAME="Jan Larres"
export BTS_CACHE=no

if [ "$HOST" = "gally" ]; then
    export ALSA_OUTPUT_PORTS="65:0"
    export SCUMMVM_PORT=$ALSA_OUTPUT_PORTS
elif [ "$HOST" = "urd" ]; then
    export ALSA_OUTPUT_PORTS="128:0"
    export SCUMMVM_PORT=$ALSA_OUTPUT_PORTS
fi


# export RUBYOPT="-w $RUBYOPT"
export RI="-f ansi"

export GOPATH="$HOME/src/go"
_add_to_path post PATH "$GOPATH/bin"

export TERMINFO="$XDG_DATA_HOME/terminfo"

export SSHHOME="$HOME/.etc/sshrc"

export AUTOSSH_PORT=0

export TMUX_TMPDIR="$XDG_RUNTIME_DIR"

export ARTISTIC_STYLE_OPTIONS="$HOME"/.etc/astylerc
export BIBTOOLRSC="$HOME"/.etc/bibtoolrsc
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export INPUTRC="$XDG_CONFIG_HOME"/inputrc
export IPYTHONDIR="$XDG_CONFIG_HOME"/ipython
export PYLINTHOME="$XDG_CACHE_HOME"/pylint
export SQLITE_HISTORY="$HOME"/.var/lib/sqlite_history
export WEECHAT_HOME="$XDG_CONFIG_HOME"/weechat
# export WINEPREFIX="$XDG_DATA_HOME"/wine/prefixes/default

export MAILCAP="$HOME/.etc/mailcap"	# elinks, w3m
export MAILCAPS="$MAILCAP:/etc/mailcap"			# Mutt, pine

export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PGPASSFILE="$XDG_CONFIG_HOME/pg/pgpass"
export PGSERVICEFILE="$XDG_CONFIG_HOME/pg/pg_service.conf"
export PSQL_HISTORY="$XDG_CACHE_HOME/psql_history"

export RUSTUP_HOME="$HOME/.var/lib/rustup"
export CARGO_HOME="$HOME/.var/lib/cargo"
_add_to_path post PATH "$CARGO_HOME/bin"
if command -v rustc > /dev/null; then
    # Also see https://github.com/rust-lang-nursery/rustup.rs/issues/450
    _rust_root="$(rustc --print sysroot)"
    _add_to_path post MANPATH "$_rust_root/share/man"
    unset _rust_root
fi
if command -v sccache > /dev/null; then
    export RUSTC_WRAPPER=sccache
fi

export POETRY_VIRTUALENVS_IN_PROJECT=true
export PIPENV_VENV_IN_PROJECT=1
export PIPENV_SHELL_FANCY=1

export CCACHE_DIR="$XDG_CACHE_HOME/ccache"
export CCACHE_COMPRESS=1
export CCACHE_HASHDIR=1

export CLIFF_FIT_WIDTH=1

export NNTPSERVER=news.gmane.org

export FZF_DEFAULT_COMMAND="ag --hidden --ignore .git -g ''"
export FZF_DEFAULT_OPTS="\
    --exact \
    --height 40% \
    --reverse \
    --preview 'echo {}' \
    --preview-window down:3:hidden:wrap \
    --bind '?:toggle-preview' \
    --bind 'ctrl-l:preview:bat --plain --color always {}' \
    --bind 'f1:execute(less -+F -f {})' \
    --bind 'ctrl-y:execute-silent(echo {} | clipboard-copy)+abort' \
    --color fg:-1,bg:-1,hl:2,fg+:11,bg+:-1,hl+:10,info:7,prompt:6,pointer:9,marker:1
"

export SDKMAN_DIR="$XDG_DATA_HOME/sdkman"

export GITHUB_USER=majutsushi

export NETHACKOPTIONS="@$HOME/.etc/nethackrc"


# Make sure this is first in PATH
_add_to_path pre PATH "$HOME/bin"

unset -f _add_to_path _source

# vim: ft=sh
