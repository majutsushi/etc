# append history list to the history file
# (important for multiple parallel zsh sessions!)
setopt append_history

# import new commands from the history file also in other zsh-sessions
setopt share_history

# save each command's beginning timestamp and the duration to the history file
setopt extended_history

# If a new command line being added to the history list duplicates an older
# one, the older command is removed from the list
setopt hist_ignore_all_dups

# remove command lines from the history list when the first character on the
# line is a space
setopt hist_ignore_space

# use proper shell splitting for words read from history
setopt hist_lex_words

# per-directory history ideas:
# https://github.com/jimhester/per-directory-history
# https://github.com/ericfreese/zsh-cwd-history

HISTFILE=$ZSH_VAR_LIB_DIR/history
[[ ! -d $ZSH_VAR_LIB_DIR/history.full ]] && mkdir $ZSH_VAR_LIB_DIR/history.full
HISTSIZE=100000
SAVEHIST=100000

_hist_ignore_f() {
    typeset -a cmd
    cmd=(${(z)${1%%$'\n'}})
    if [[ ${#cmd} -ge 1 && "${cmd[1]}" == "f" ]]; then
        return 1
    fi
    return 0
}
add-zsh-hook zshaddhistory _hist_ignore_f

_append_full_hist() {
    if [[ "$UID" -ne 0 && $1 != $'\n' ]]; then
        local cmd=${1%%$'\n'}
        [[ "$cmd" =~ "^ +" ]] && return # imitate hist_ignore_space
        local log_dir="$(print -P "$ZSH_VAR_LIB_DIR/history.full/%D{%Y}/%D{%m}")"
        mkdir -p "$log_dir"
        local full_cmd_log="$(print -P "${log_dir}/%D{%Y-%m-%d}.log")"
        if [[ -n "$cmd" ]]; then
            echo "$(date -u --iso-8601=seconds) [$USER@$HOST:$PWD] $cmd" >>| ${full_cmd_log}
            chmod 600 $full_cmd_log
        fi
    fi
}
add-zsh-hook zshaddhistory _append_full_hist

# vim: filetype=zsh
