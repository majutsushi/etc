# Only run in interactive shells
[[ $- == *i* ]] || return 0

tmuxrc() {
    local TMUXDIR=/tmp/sshrctmux
    if ! [ -d $TMUXDIR ]; then
        rm -rf $TMUXDIR
        mkdir -p $TMUXDIR
    fi
    rm -rf $TMUXDIR/.sshrc.d
    cp -r "$SSHHOME"/.sshrc "$SSHHOME"/bashsshrc "$SSHHOME"/sshrc "$SSHHOME"/.sshrc.d "$TMUXDIR"
    SSHHOME=$TMUXDIR SHELL=$TMUXDIR/bashsshrc /usr/bin/tmux -S "$TMUXDIR"/tmuxserver -f "$SSHRCD"/tmux.conf "$@"
}
SHELL=$(which bash)

term_exists() { infocmp "$1" &>/dev/null; }
if ! term_exists "$TERM"; then
    if term_exists "${TERM%-256color}"; then
        TERM="${TERM%-256color}"
    elif [[ "$TERM" =~ tmux.* ]] && term_exists tmux-256color; then
        TERM=tmux-256color
    elif [[ "$TERM" =~ tmux.* ]] && term_exists tmux; then
        TERM=tmux
    elif [[ "$TERM" =~ tmux.* ]] && term_exists screen-256color; then
        TERM=screen-256color
    elif [[ "$TERM" =~ tmux.* ]] && term_exists screen; then
        TERM=screen
    elif term_exists xterm-256color; then
        TERM=xterm-256color
    else
        TERM=xterm
    fi
    export TERM
fi

prompt_logo() {
    local -A colours
    colours[default]='\[\e[0m\]'
    colours[black]='\[\e[30m\]'
    colours[red]='\[\e[31m\]'
    colours[green]='\[\e[32m\]'
    colours[yellow]='\[\e[33m\]'
    colours[blue]='\[\e[34m\]'
    colours[magenta]='\[\e[35m\]'
    colours[cyan]='\[\e[36m\]'
    colours[white]='\[\e[37m\]'

    local logo="?"
    if [[ -r "/etc/os-release" ]]; then
        local distro=$(. /etc/os-release && echo "$ID")
        case "$distro" in
            debian)
                logo="${colours[red]}@"
                ;;
            ubuntu)
                logo="\\[\\e[38;5;202m\\]u"
                ;;
            centos)
                logo="${colours[green]}*${colours[magenta]}*${colours[yellow]}*${colours[blue]}*"
                ;;
            amzn)
                logo="\\[\\e[38;5;208m\\]⬢"
                ;;
            raspbian)
                logo="${colours[red]}🍓"
                ;;
        esac
    fi

    printf "%s%s " "$logo" "${colours[default]}"
}
PROMPT_LOGO="$(prompt_logo)"

unset -f term_exists prompt_logo


color-log() {
    sed -r \
        -e "s/(.*error.*)/$(tput setaf 1)\\1$(tput sgr0)/I" \
        -e "s/(.*warning.*)/$(tput setaf 3)\\1$(tput sgr0)/I" \
        -e "s/(.*debug.*)/$(tput setaf 7)\\1$(tput sgr0)/I"
}


__rprompt() {
    printf "%*s\\r" "$(tput cols)" "$(eval echo "$RPROMPT")"
}

if [[ ! $PROMPT_COMMAND =~ __rprompt ]]; then
    export PROMPT_COMMAND="__rprompt; ${PROMPT_COMMAND:-:}"
fi


set -o noclobber

shopt -s checkwinsize

# disable XON/XOFF flow control (^s/^q)
stty stop ''
stty -ixoff
stty -ixon

HISTCONTROL=ignorespace:ignoredups:erasedups
HISTTIMEFORMAT='%F %T '
shopt -s histappend

if [[ -r "/usr/share/bash-completion/bash_completion" ]]; then
    . /usr/share/bash-completion/bash_completion
fi

export PAGER=less
if command -v vim >/dev/null; then
    export EDITOR=vim
    export VISUAL=vim
else
    export EDITOR=vi
    export VISUAL=vi
fi

#PROMPT_DIRTRIM=2
PS1="$PROMPT_LOGO\\[\\e[31m\\]\\u\\[\\e[m\\]@\\[\\e[33m\\]\\h\\[\\e[m\\]:\\[\\e[32m\\]\\w\\[\\e[m\\]\\n\\$ "
if [[ -f /var/run/reboot-required ]]; then
    PS1="\\[\\e[31m\\]R \\[\\e[m\\]${PS1}"
fi

eval "$(dircolors)"
alias ls='LC_COLLATE=POSIX ls  -Fh --color=auto --group-directories-first'
alias ll='LC_COLLATE=POSIX ls -lFh --color=auto --group-directories-first'
alias l='LC_COLLATE=POSIX ls -lAFh --color=auto --group-directories-first'
command -v vim &>/dev/null && alias vi=vim
command -v tree &>/dev/null && alias t="tree -F -C"

export SSHRCD="$SSHHOME/.sshrc.d"
export XDG_CONFIG_HOME="$SSHRCD/config"
export MYVIMRC="$SSHRCD/vimrc"
export VIMINIT="source $MYVIMRC"

export INPUTRC="$SSHRCD/inputrc"

export LESS='-iRX-P%f ?m(file %i/%m) .lines %lt-%lb?L/%L. ?e(END)?x - Next\: %x.:?PB%PB\%..%t'
export SYSTEMD_LESS="-F$LESS"
export LESSHISTFILE=$SSHHOME/.lesshst
export LESSKEY=$SSHHOME/.less
lesskey "$SSHRCD/lesskey"

export LESS_TERMCAP_md=$(tput setaf 1; tput bold)
export LESS_TERMCAP_us=$(tput setaf 2; tput bold)
export LESS_TERMCAP_ue=$(tput sgr0)
export LESS_TERMCAP_so=$(tput setaf 0; tput setab 7)
export LESS_TERMCAP_se=$(tput sgr0)
export GROFF_NO_SGR=1

export CLIFF_FIT_WIDTH=1

eval "$(dircolors -b "$SSHRCD"/dircolors)" 2>/dev/null || :

echo -e "\\e]0;${HOSTNAME%%.*}\\e\\"

# vim: ft=sh
