###############################################################################
# Variables {{{

  set my_muttdir = $XDG_CONFIG_HOME/mutt

# }}}
###############################################################################
###############################################################################
# Alias options {{{

  set alias_file = $my_muttdir/aliases
source $alias_file

# }}}
###############################################################################
# Server/Folder options {{{

# source ~/.mutt/smtp-majutsushi.net
# source "gpg -d .muttrc.secure.gpg|"
# source ~/.mutt/imap-urd
# source ~/.mutt/imap-majutsushi.net
source $my_muttdir/maildir

# to set:
#   set smtp_url=""
#   set smtp_pass=""
#   set folder=
#   set spoolfile=
#   set imap_user=
#   set imap_pass=""
#
#  set folder=imaps://mail.majutsushi.net/INBOX     # directory with all mail folders
#  set spoolfile=imaps://mail.majutsushi.net/INBOX

  set postponed="=.Drafts"
  set record="=.Sent"
  set imap_idle
  set imap_authenticators=""
  set imap_check_subscribed
  set imap_delim_chars="/."
  set imap_keepalive=900
  set imap_list_subscribed
  set imap_passive
  set imap_peek
  set imap_servernoise

  set certificate_file="$my_muttdir/certificates"
  set connect_timeout=30
#  set entropy_file=""
  set header_cache="~/.cache/mutt_header/"
#  set header_cache_pagesize=16384
  set maildir_header_cache_verify=yes
#  set message_cachedir="~/.cache/mutt_body/" # body caching
unset keep_flagged
  set mbox_type=Maildir

  set preconnect=""
  set sendmail="/usr/bin/msmtp"
  set sendmail_wait=0
  set use_envelope_from
  set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt
  set ssl_force_tls
  set ssl_starttls
#  set ssl_use_sslv2
unset ssl_use_sslv3
  set ssl_use_tlsv1
#  set ssl_usesystemcerts
  set tmpdir="/tmp"
  set tunnel=""
  set use_ipv6

# }}}
###############################################################################
# Identity options {{{

  set from="jan@majutsushi.net"           # takes value from $EMAIL
  set hostname="majutsushi.net"
  set realname="Jan Larres"
  set use_from          # generate a "From:" header (unless my_hdr From:)

# alternative mail addresses
alternates ((jan(\.larres)?|lists|majutsushi)@majutsushi\.net|jan\.larres@gmail\.com|jan\.larres@gmx\.net|larres(01)?@[a-z.]*uni-passau\.de|(larresjan|jan\.larres)@ecs\.vuw\.ac\.nz)

# }}}
###############################################################################
# Security options {{{

  set crypt_autosign
unset crypt_autoencrypt
  set crypt_replyencrypt
  set crypt_replysign
  set crypt_replysignencrypted
  set crypt_timestamp
# see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=838361
unset crypt_use_gpgme
  set crypt_verify_sig
unset forward_decrypt   # decrypt PGP message, when mime_forward and !mime_fw_d

# =============================================================================
# PGP {{{
unset pgp_autoinline  # attempt to send as inline
  set pgp_encrypt_self=yes
  set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"
  set pgp_ignore_subkeys
unset pgp_long_ids
unset pgp_replyinline # reply to inline as inline
unset pgp_retainable_sigs
  set pgp_show_unusable # Show non-usable keys on the PGP key selection menu?
  set pgp_sign_as="00A0FD5F"
  set pgp_strict_enc
  set pgp_sort_keys=address
  set pgp_timeout=1000  # number of seconds to cache passphrase
  set pgp_use_gpg_agent
  set pgp_auto_decode
# }}}
# =============================================================================

# }}}
###############################################################################
# Message compositing options {{{

# =============================================================================
# before editing {{{

  set abort_nosubject=no     # Abort, if message has no subject.
unset askbcc            # ask to fill out Bcc on mesg-send?
unset askcc             # ask to fill out CC on mesg-send?
unset autoedit          # start editor without asking for to, subject,...
  set editor="vim"
  set edit_headers      # put headers in editor when composing messages
  set followup_to       # Add Mail-Followup-To header.
  set hdrs              # nohdrs implies not to write my_hdr into mail.
unset hidden_host       # when set, skip the host name part of hostname
  set indent_string="> "   # change this and I'll kill you!  ;-)
#   set query_command="~/bin/mutt-evo-query.rb '%s'"
  set query_command="lbdbq '%s'"
  set recall=ask-no     # ask for using postponed message.
  set sig_dashes        # Prepend "-- \n" to the signature
unset sig_on_top
  set signature="$my_muttdir/sig.sh|"
unset text_flowed       # use format=flowed; if set, unset encode_from
unset use_domain        # add $hostname to all addresses without @host
  set user_agent        # Create User-Agent: Mutt/<Version> header.

# }}}
# =============================================================================
# after editing {{{

  set abort_unmodified=yes   # Abort if message wasn't edited.
  set allow_8bit        # use QP or Base64 if unset.
  set compose_format="-- Mutt: Compose [Approx. msg size: %l Atts: %a]%>-"
  set content_type="text/plain"
  set copy              # always keep a copy of my mails
  set encode_from       # use Quoted-Printable if '^From ' in a mail.
  set fcc_attach        # store attachments too when doing a Fcc
  set fcc_clear         # FCCs will be stored unencrypted and unsigned
unset force_name        # outgoing mail to be saved in folder of "login name"
  set ispell="aspell -e -c"
  set postpone=ask-no   # ask for postponing when doing an Abort.
unset save_name         # Fcc, if ~/Mail/<to> exists.
#   set send_charset="us-ascii:iso-8859-1:iso-8859-15:iso-2022-jp:utf-8"
  set send_charset="us-ascii:utf-8"
  set use_8bitmime      # run sendmail 8.8.x with -B8BITMIME to enable 8bit
unset write_bcc         # send Bcc: line to $sendmail

# }}}
# =============================================================================
# replying {{{

  set attribution="%n <%a>:"
  set fast_reply        # ignored if $autoedit
unset header            # quote full header on reply
  set honor_followup_to=yes   # Ask whether to honor Mail-Followup-To header
  set ignore_list_reply_to    # ignore Reply-To pointing back to mailinglist
  set include=yes       # quote message, when replying
unset metoo             # should we keep ourselves in group replies?
  set post_indent_string=""
unset reply_self        # if unset, a reply to yourself implies reply to other
  set reply_to=ask-yes  # Use or ignore Reply-To.
  set reverse_name      # Set "From" to address where replied mail was sent to
  set reverse_realname  # if unset, use $realname in $reverse_name

# }}}
# =============================================================================
# forwarding {{{

  set bounce="ask-yes"
unset bounce_delivered  # unset => remove Delivered-To: when bouncing.
  set forward_decode    # decode messages when forwarding without MIME
  set forward_edit=yes
  set forward_format="Fw: %s"
  set forward_quote     # quote forwarded message if not $mime_forward
  set mime_forward=ask-no     # use MIME when forwarding mails.
unset mime_forward_decode     # decode messages when forwarding with MIME
  set mime_forward_rest=yes

# }}}
# =============================================================================

# }}}
###############################################################################
# Interface options {{{

# =============================================================================
# general {{{

unset arrow_cursor      # "->" as cursor (faster on slow networks).
  set assumed_charset="windows-1252"
unset beep              # beep on certain user errors and other errors
unset beep_new          # beep on new mail
#   set charset="utf-8"   # shouldn't need setting
  set check_new         # search for new messages in maildir/MH folders.
  set escape="~"
  set help              # show help in first line of the display
  set history=50
  set mail_check=90
  set menu_scroll       # scroll on last line of menu (set) or do a nextpage?
unset meta_key          # Don't interpret Alt-x as ESC x
  set move=no           # Move mail-spool to $mbox?
  set quit=yes          # ask before quitting.
unset read_only         # folders not read only
unset score             # don't do scoring
  set sleep_time=1
unset status_on_top     # status line at the top or bottom?
unset suspend           # Ctrl-Z is able to suspend mutt.
  set timeout=15        # How long to wait for input to perform regular operations
unset wait_key          # Only "press a key" if return value non-zero
  set xterm_icon="M%?n?AIL&ail?"
  set xterm_set_titles
  set xterm_title="Mutt with %?m?%m messages&no messages?%?n? [%n NEW]?"

# }}}
# =============================================================================
# browser {{{

  set folder_format="%F %d %8s %2N %f"
#  set mask="!^\.[^.]"   # doesn't work for some reason ...
  set sort_browser=alpha

# }}}
# =============================================================================
# index {{{

# threads
unset collapse_unread   # collapse threads with unread mails
unset digest_collapse
  set duplicate_threads
unset strict_threads    # thread only by In-Reply-To/References.
  set reply_regexp="^((Re|RE|re|Aw|AW|aw) ?:[ \t]*)*"
  set sort_re           # only put a child in a thread if starts with 'reply_regexp'
unset thread_received   # use date received instead of date sent for thread subject sort
unset uncollapse_jump   # don't move pointer when uncollapsing thread

unset ascii_chars       # Use ASCII chars for threading arrows.
  set auto_tag          # if something is tagged, run commands on tagged msgs.
unset confirmappend     # prompt for confirm when appending message to ex. mbox
  set confirmcreate     # prompt for confirm when saving to non existing mbox
  set date_format="!%a, %d %b %Y %H:%M:%S %z"
  set delete=yes        # ask for confirmation when deleting messages?
  set delete_untag      # untag messages when marking them for deletion.
  set index_format="%Z%?X?A& ?%?M?%3M&   ? %s%*  %?y?[%y] ?%-20.20F %[%d/%m/%y] %[%H:%M]"
unset mark_old          # mark new articles as old, when leaving mbox
  set mh_purge          # remove messages marked as deleted from MH folders.
  set narrow_tree
  set read_inc=20
  set resolve           # go to next undeleted message after modifying current
unset reverse_alias     # use realname from reverse alias lookup
  set status_chars=" *%A" # status of mbox (unchanged, changed, readonly, attach)
  set status_format="---[%r%f ]---[ Msgs:%?M?%M/?%m%?n? New:%n?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p? ]---%>-(%P)---"
  set to_chars=" +TCFL" # default (Not to me, To: me only, To: me, CC me, From me)
  set write_inc=10      # number - display increment count for every n-th mail

folder-hook .    set sort=threads sort_aux=last-date-received
folder-hook <    set sort=reverse-date
folder-hook Spam set sort=subject

folder-hook !<   'push "<collapse-all>"'

# }}}
# =============================================================================
# pager {{{

unset allow_ansi
  set display_filter='t-prot -cmekatl --max-lines=250 --bigq --pgp-move-vrf -Mmutt -L$XDG_CONFIG_HOME/t-prot/footers -A$XDG_CONFIG_HOME/t-prot/ads'
unset implicit_autoview # use autoview, if a "copiousoutput" is in mailcap.
#  set mailcap_path=""
  set mailcap_sanitize  # remove ugly chars from mailcap % expands.
unset markers           # put a '+' at the beginning of wrapped lines.
  set pager="builtin"
  set pager_context=3
  set pager_format="%S %s%*  %-20.20n (%P)"
#   set pager_index_lines=9   # number of lines to see from the index
  set pager_index_lines=15   # number of lines to see from the index
  set pager_stop        # Don't jump to next message at end of message.
unset prompt_after      # display prompt after exit from pager
  set quote_regexp="^( {0,4}[a-z0-9]*[>|])+"
  set reflow_text
  set reflow_wrap=72
  set smart_wrap        # wrap long lines at word boundary.
  set smileys="(>From )|(:[-^]?[][)(><}{|/DP])"
  set tilde             # Internal Pager: ~~~~ at and of message?
  set wrap=0

auto_view text/html text/enriched text/rtf text/calendar application/pdf application/zip application/x-gunzip application/x-tar-gz application/pgp-signature #image/*

# Headers to ignore/see
# Ignore everything but the really important lines:
ignore *
unignore from: date subject to cc reply-to:
unignore organization organisation
unignore user-agent: x-agent: x-mailer: x-newsreader:
unignore newsgroups: posted-to: X-Spam-Status:
unignore X-Fnord: X-Message-Flag:
unignore x-label:
unignore X-GitHub-Sender

# ordering of headers in the pager
unhdr_order *
hdr_order Date: From: Reply-To: To: Cc: Subject: X-Label: X-Newsreader: X-Mailer: Organization: Organisation: User-Agent: X-Fnord: X-Message-Flag: Newsgroups: X-Spam-Status:

# modify order for Apple Mail messages with attachments
# http://wiki.mutt.org/?ConfigTricks
alternative_order text/plain text/html
message-hook .                           'unalternative_order *; alternative_order text/plain text/html'
message-hook '~h "X-Mailer: Apple Mail"' 'unalternative_order *; alternative_order multipart/mixed multipart/related text/plain text/html'
message-hook '~f patreon\.com' 'unalternative_order *; alternative_order text/html text/plain'

# }}}
# =============================================================================
# sidebar {{{

  set sidebar_delim_chars="./"
  set sidebar_divider_char=" "
  # set sidebar_divider_char = '│'
  set sidebar_folder_indent
  set sidebar_format="%B%*  %S%?N?(%N)?%?F?[%F]?"
  # set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"
  set sidebar_indent_string=" "
# unset sidebar_new_mail_only
  set sidebar_short_path
  # set sidebar_sort_method=unsorted
  set sidebar_visible
  set sidebar_width=40

  set mail_check_stats

# }}}
# =============================================================================
# attachments {{{

  set attach_format="%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "

# attachments +A */.*
# attachments -A text/x-vcard
# attachments -A application/pgp.*
# attachments -A application/x-pkcs7-.*
# attachments -A message/external-body
# attachments +I text/plain
attachments +I text/rtf
attachments +I text/calendar
attachments +I application/.*
attachments +I image/.*
# attachments -I message/external-body

mime_lookup application/octet-stream

# }}}
# =============================================================================
# aliases {{{

  set alias_format="%4n %2f %t %-10a %r"
  set sort_alias=alias

# }}}
# =============================================================================

# }}}
###############################################################################
# Printing {{{

  set print=yes          # ask whether you really want to print.
  set print_command="muttprint"
  set print_decode
  set print_split

# }}}
###############################################################################
# Spam {{{

# spam "X-Spam-Status: Yes, score=([0-9]+.[0-9]+)" "Spam [%1]"

# }}}
###############################################################################
# External options {{{

  set attach_sep="\n"
  set attach_split      # handle every single attachment instead of concat
unset pipe_decode       # Weed headers and PGP-decode message before piping
  set pipe_split        # split tagged messages (or don't) when using "|"
  set rfc2047_parameters
unset save_address      # Use full mail adress (with domain) as default folder.
unset save_empty        # remove mailbox when last message is removed.
  set shell=""

# }}}
###############################################################################
# Groups {{{

group -group sent  -addr `mu cfind --muhome=~/.cache/mu-sent-index --format=mutt-ab | sed -e '1d' | cut -f 1 | tr '\n' ' '`

# }}}
###############################################################################
# Mailing lists {{{

## "lists" adds a list of mailing lists addresses
## so mutt knows about these for showing them in the folder index
## and to allow replying to them with the command "list-reply".
## The first part of the address (up to the @) should be used here.
unlists *
lists -group ml `cd ~/Maildir && echo .lists.* | sed 's/_/\./g' | sed 's/\.lists\.//g'`

unsubscribe *
subscribe `cd ~/Maildir && echo .lists.* | sed 's/_/\./g' | sed 's/\.lists\.//g'`

# }}}
###############################################################################
# Searching {{{

  set default_hook="~f %s | ~t %s"
  set simple_search="~f %s | ~C %s | ~s %s | ~y %s"   # default pattern (Fr|To|Cc|Su|Label)
  set thorough_search   # MIME decode before searching.
  set wrap_search       # Wrap search to top/bottom.

# }}}
###############################################################################
# Bindings {{{

# =============================================================================
# General {{{

# Bindings for editing and reloading the .muttrc
#macro generic   ,ve   "!screen -t muttrc vi ~/.muttrc\r"
macro generic   ,vu   "<enter-command>source $my_muttdir/muttrc\r" "Source muttrc"
#macro generic   ,va   "!screen -t aliases vi ~/.mutt/aliases\r"

macro index,pager i   "<sync-mailbox><change-folder>?<toggle-mailboxes>" "Go to mailbox list"
bind browser i        exit

# toggle TOFU protection with ESC-0 (off) and ESC-1 (on)
macro generic \e0 "<enter-command>unset display_filter\n" "Turn TOFU protection off"
macro generic \e1 "<enter-command>set display_filter='t-prot -cmekatl --max-lines=250 --bigq --pgp-move-vrf -Mmutt -L$XDG_CONFIG_HOME/t-prot/footers -A$XDG_CONFIG_HOME/t-prot/ads'\n" "Turn TOFU protection on"

# }}}
# =============================================================================
# browser {{{

bind browser x check-new
bind browser g top-page
bind browser G bottom-page

# }}}
# =============================================================================
# index & pager {{{

# movement
bind index,pager  ' '         next-unread
bind index,pager   <tab>      next-unread-mailbox
bind pager         \n         next-unread
bind index         <pagedown> next-page
bind index         <pageup>   previous-page
bind pager         j          next-line
bind pager         k          previous-line
bind pager         p          previous-undeleted
bind pager         n          next-undeleted
bind pager         <up>       previous-line
bind pager         <down>     next-line
bind index,pager   \Cd        half-down
bind index,pager   \Cu        half-up
bind index         g          first-entry
bind index         G          last-entry
bind pager         g          top
bind pager         G          bottom

macro index s "<save-message>?<toggle-mailboxes>" "move a message to a mailbox"

bind index,pager  R  group-reply

# change binding because of sidebar
bind index,pager   B          bounce-message

# saving
macro index,pager  \Cs        "<pipe-message>cat > ~/Downloads/" "Save message to a file"

# syncing
bind index         x    sync-mailbox
bind index,pager   X    imap-fetch-mail

# printing
macro index  ,P         "<display-toggle-weed><print-message><display-toggle-weed><exit>" "Print message"
macro pager  ,P         "<display-toggle-weed><print-message><display-toggle-weed>" "Print message"

# threads
macro index        \Cr  "<enter-command>unset resolve<enter><read-thread><collapse-thread><next-unread><current-middle><enter-command>set resolve<enter>" "Mark the current thread as read"
macro pager        \Cr  "<exit>\Cr<display-message>" "Mark the current thread as read"
macro index,pager  \er  "<enter-command>unset resolve<enter><read-subthread><next-unread><current-middle><enter-command>set resolve<enter><display-message>" "Mark the current subthread as read"
macro index        \Cx  "<enter-command>unset resolve<enter><collapse-thread><pipe-message>killthread\n<enter-command>set resolve<enter>\Cr" "Kill thread"
macro pager        \Cx  "<exit>\Cx<display-message>" "Kill thread"
macro index       '{'   "<collapse-thread>" "Collapse current thread"

# quickly change to important folders
macro index,pager  I    "<change-folder>!\n" "Go to Inbox"
macro index,pager  ,S   "<change-folder><\n" "Go to 'sent' folder"
macro index,pager  ,A   "<change-folder>=.Archive\n" "Go to 'Archive' folder"
macro index,pager  ,W   "<change-folder>=.Waiting\n" "Go to 'Waiting' folder"
macro index,pager  ,T   "<change-folder>=.Todo\n" "Go to 'Todo' folder"

# quickly file mail
macro index,pager  ,a   "<save-message>=.Archive\n" "Move message to folder 'Archive'"
macro index,pager  ,w   "<save-message>=.Waiting\n" "Move message to folder 'Waiting'"
macro index,pager  ,t   "<save-message>=.Todo\n" "Move message to folder 'Todo'"

# search mail with maildir-utils
macro index  ,s  "<shell-escape>$my_muttdir/mu-search<enter><change-folder-readonly>~/.mu/results<enter>" "Search with mu"

# add sender to evolution address book
# macro index,pager  A    "<pipe-message>~/src/add-to-eds/add-to-eds<return>" "Add the sender address to evolution address book"

# save in taskwarrior
macro index,pager  \eT  "<pipe-message>$my_muttdir/task-add\n" "Save message to taskwarrior"

# X-Label patch
ifdef edit-label bind index,pager y edit-label

# labels
set my_vi=$editor
macro index y "<enter-command>set editor=\"$my_muttdir/editlabel append\"\n<enter-command>unset resolve<enter><edit><sync-mailbox><toggle-new><enter-command>set editor=$my_vi\n<enter-command>set resolve<enter>" "Append label"
macro pager y "<exit>y<display-message>"
macro index Y "<enter-command>set editor=\"$my_muttdir/editlabel menu\"\n<enter-command>unset resolve<enter><edit><sync-mailbox><toggle-new><enter-command>set editor=$my_vi\n<enter-command>unset resolve<enter>" "Edit labels"
macro pager Y "<exit>Y<display-message>" "Edit labels"
macro index \Cy "<limit>~y " "Limit view to label"

# spam handlers
macro index  S          "<pipe-message>/usr/bin/sa-learn --spam --no-sync --single\n" "Classify as Spam"
macro index  H          "<pipe-message>/usr/bin/sa-learn --ham  --no-sync --single\n" "Classify as Ham"
macro index  P          "<shell-escape>/usr/bin/sa-learn --sync\n" "Sync Spamassassin-db"

# limit mails
macro index  ,la        "<limit>~A\n<collapse-all>" "Limit to all messages"
macro index  ,ll        "<limit>~F | ~N\n" "Limit to new and flagged messages"

# goobook
macro index,pager A |'goobook add'\n

# gpg
macro pager  J  "<shell-escape>gpg --keyserver search.keyserver.net --keyserver-options honor-http-proxy --recv-key " "Get PGP Key"
macro pager  K  "<shell-escape>gpg --lsign-key " "Sign PGP Key"

# same in pager mode - ugly but what the hell...
macro pager \e0         "<enter-command>unset display_filter; exec exit\n:exec display-message\n" "Turn TOFU protection off"
macro pager \e1         "<enter-command>set display_filter='t-prot -cmekatl --max-lines=250 --bigq --pgp-move-vrf -Mmutt -L$XDG_CONFIG_HOME/t-prot/footers -A$XDG_CONFIG_HOME/t-prot/ads'; exec exit\n:exec display-message\n" "Turn TOFU protection on"

# call viewhtmlmsg from macro
macro index,pager <F7> "\
<enter-command> set my_wait_key=\$wait_key wait_key=no<enter>\
<pipe-message>python -c 'from muttils import viewhtmlmsgcommand; viewhtmlmsgcommand.run()' -k 10<enter>\
<enter-command> set wait_key=\$my_wait_key &my_wait_key<enter>\
" "view HTML in browser"

macro index,pager <F8> "\
<enter-command> set my_wait_key=\$wait_key wait_key=no<enter>\
<pipe-message>python -c 'from muttils import viewhtmlmsgcommand; viewhtmlmsgcommand.run()' -k 10 -s<enter>\
<enter-command> set wait_key=\$my_wait_key &my_wait_key<enter>\
" "view HTML (safe) in browser"

# }}}
# =============================================================================
# compose {{{

bind compose   <enter>  send-message
bind compose   <return> send-message
bind compose   v        view-attach

# change binding because of sidebar
bind compose   B        edit-bcc

macro compose  ,w       "<edit-fcc>=.Waiting\n" "Save message in 'Waiting' folder"

macro compose \es "Fgpg --clearsign\ny" "clearsign with GnuPG"
macro compose \ee "Fgpg --encrypt --armor\ny" "encrypt with GnuPG"
#macro pager \eD "|gpg --decrypt | less\n" "decrypt with GnuPG"
#macro index \eD "|gpg --decrypt | less\n" "decrypt with GnuPG"
#macro pager \eV "|gpg --verify\n" "verify signature with GnuPG"
#macro index \eV "|gpg --verify\n" "verify signature with GnuPG"

# }}}
# =============================================================================
# attach {{{

bind attach ' ' select-entry
bind attach  S  save-entry
message-hook . "macro attach s <save-entry><kill-line>$HOME/Downloads<enter>y"
source $my_muttdir/attachsave|

# }}}
# =============================================================================
# editor {{{

# bind editor <tab>       complete-query # overwrites <complete>

# }}}
# =============================================================================
# sidebar {{{

bind index \Cp sidebar-prev
bind pager \Cp sidebar-prev
bind index \Cn sidebar-next
bind pager \Cn sidebar-next
bind index \Co sidebar-open
bind pager \Co sidebar-open

macro index,compose b "<enter-command>toggle sidebar_visible<enter><refresh>"       "Toggle sidebar"
macro pager         b "<enter-command>toggle sidebar_visible<enter><redraw-screen>" "Toggle sidebar"

# }}}
# =============================================================================
# query menu {{{

bind query <space> tag-entry
# bind query T       tag-pattern

# }}}
# =============================================================================

# }}}
###############################################################################
# Colors {{{

# source `case $TERM in\
#              *256color) echo '~/.mutt/colors256-dark'; break ;;\
#              *)        echo '~/.mutt/konsole-color'; break ;;\
#         esac`

set my_white      = color231
set my_background = color236
set my_yellow     = color220
set my_green      = color120
set my_red        = color167
set my_cyan       = color116

# =============================================================================
# general {{{

color normal    $my_white  $my_background  # normal message text
color status    color16    color145        # status lines
color indicator $my_white  color241        # current line in index etc
color message   $my_white  $my_background  # info messages
color error     $my_white  color196        # error messages

# color sidebar     white    default
color sidebar_new     $my_red   $my_background
color sidebar_flagged $my_yellow   $my_background
color sidebar_divider color16  color145

# }}}
# =============================================================================
# index {{{

# color index     color113        $my_background  ~N    # new mail
color index     bright$my_white $my_background  ~N    # new mail

color index     color113        $my_background  '!~N %f sent !%C ml'
color index     brightcolor113  $my_background  ' ~N %f sent !%C ml'

color index     color250        $my_background  '!~N ~c jan@majutsushi.net'
color index     brightcolor250  $my_background  ' ~N ~c jan@majutsushi.net'

color index     $my_cyan        $my_background  '(~P !~D) | (~v ~(~P !~D))'    # mail from myself

color index     color241        $my_background  '=s "*****SPAM*****"'
color index     color241        $my_background  '=s "*** GMX Spamverdacht ***"'
# color index     brightblack     default         "~h '^X-Spam-Status:.*score=[34].'"
# color index     brightred       default         "~h '^X-Spam-Status:.*score=[56].'"

color index     color196        $my_background  '(~F !~D) | (~v ~(~F !~D))'  # Flagged
color index     color222        color64         ~T      # Tagged
color index     $my_red         $my_background  ~D      # Deleted
# color index brightblack default '~d>1w'

color tree      bright$my_yellow    $my_background  # thread arrows

# }}}
# =============================================================================
# message headers {{{

color hdrdefault $my_cyan   $my_background
color header     $my_green  $my_background  "^from:"
color header     $my_yellow $my_background  "^reply-to:"
color header     $my_yellow $my_background  "^to:"
color header     $my_yellow $my_background  "^cc:"
color header     $my_yellow $my_background  "^date:"
color header     $my_red    $my_background  "^subject:"
color header     $my_cyan   $my_background  "^newsgroups:"
color header     $my_cyan   $my_background  "^x-mailer:"
color header     $my_cyan   $my_background  "^message-id:"
color header     $my_cyan   $my_background  "^Organization:"
color header     $my_cyan   $my_background  "^Organisation:"
color header     $my_cyan   $my_background  "^User-Agent:"
color header     $my_cyan   $my_background  "^X-Message-Flag:"
color header     $my_cyan   $my_background  "^X-Spam-Status:"

# }}}
# =============================================================================
# message bodies {{{

color body      $my_yellow      $my_background  " [;:]-?[)/(|DpP]"  # colorise smileys
# color body      brightblue  default  "\\b[^ ]+://[^] >\")]*"
color body      bright$my_cyan  $my_background  "((ftp|http|https)://|(file|news):|www\\.)[-a-z0-9_.:@]*[a-z0-9](/[^][{} \t\n\r\"<>()]*[^][{} \t\n\r\"<>().,:!])?/?"
color body      brightcolor113 $my_background  "[[:alnum:]][-+.#_[:alnum:]]*@[-+.[:alnum:]]*[[:alnum:]]"

#  Coloring quoted text - coloring the first 8 levels:
color quoted    $my_cyan    $my_background
color quoted1   $my_yellow  $my_background
color quoted2   $my_red     $my_background
color quoted3   $my_green   $my_background
color quoted4   $my_cyan    $my_background
color quoted5   $my_yellow  $my_background
color quoted6   $my_red     $my_background
color quoted7   $my_green   $my_background

# diffs
color body $my_red         $my_background "^---[^-].*"
color body $my_red         $my_background "^-(  | ?	).*"
color body $my_red         $my_background "^-[^ ].*"
color body $my_red         $my_background "^- ?$"
color body $my_green       $my_background "^[+].*"
color body $my_cyan        $my_background "^!.*"
color body brightcolor143  $my_background "^diff .*"
color body $my_white       $my_background "^index [a-f0-9].*"
color body $my_yellow      $my_background "^@@ .*"

color attachment $my_white  color241
color signature  $my_red    $my_background
color tilde      color152   color239
color markers    color152   color239  # wrap markers
# color bold      green       default
# color underline yellow      default

# highlight TOFU protection:
color body color152   color239       "^\\[---.*"
color body $my_green  $my_background "^#v[-+]"

# }}}
# =============================================================================

# }}}
###############################################################################
# Hooks {{{

#save-hook .* =INBOX.lists.%B

# charset-hook us-ascii ISO-8859-15
# charset-hook unknown-8bit ISO-8859-15

#folder-hook .    save-hook .* >.

# }}}
###############################################################################
# Obsolete stuff {{{

# obsoleted by imap_check_subscribed
## "mailboxes" defines the list of folders to be checked for new mail
## Mutt both can show the number of mailboxes with new mail in the index and
## you can cycle through these after giving the "change-folder" command.  :-)
# mailboxes !
# mailboxes !.DomainBOX
# mailboxes !.Uni
# mailboxes !.ebay
# mailboxes !.livejournal
# mailboxes !.login
# mailboxes !.privat
# mailboxes !.sent
# mailboxes !.shopping
# mailboxes !.wordpress
# mailboxes `for file in ~/Maildir/.lists.*; do echo -n "!$(basename $file) "; done`
# mailboxes `for file in ~/Maildir/.news.*; do echo -n "!$(basename $file) "; done`
# mailboxes `for file in ~/Maildir/.misc.*; do echo -n "!$(basename $file) "; done`

# }}}
###############################################################################

# vim: tw=0 fdm=marker fen
